server.port=8080

# Cloud SQL via SocketFactory
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql:///${DB_NAME}?socketFactory=com.google.cloud.sql.postgres.SocketFactory&cloudSqlInstance=${CLOUD_SQL_INSTANCE}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}

spring.jpa.show-sql=true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Your existing config
gcs.bucket=propadda_media
gcs.signed-url-expiry-seconds=300
gcs.share-bucket=propadda_share

# Multipart (note: Cloud Run request limit ~32MB — use signed/resumable uploads!)
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=500MB
spring.servlet.multipart.max-request-size=500MB

#email
app.frontend.url=${FRONTEND_URL}

# JWT config
security.jwt.secret=${JWT_TOKEN}
security.jwt.access-exp-days=30
security.jwt.refresh-exp-days=60

# cookie secure flag for non-HTTPS dev toggle
security.cookie.secure=true

# SMTP (use environment variables in production)
spring.mail.host=${SMTP_HOST}
spring.mail.port=${SMTP_PORT}
spring.mail.username=${SMTP_USERNAME}
spring.mail.password=${SMTP_PASSWORD}

# Ensure TLS is used
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.transport.protocol=smtp
spring.mail.default-encoding=UTF-8

# Optional: from address for your application
app.mail.from=${APP_MAIL_FROM}

# 1️⃣  Force a valid "From" envelope address (important)
spring.mail.properties.mail.smtp.from=${APP_MAIL_FROM}

# 2️⃣  Force a valid HELO/EHLO hostname
spring.mail.properties.mail.smtp.localhost=mail.propadda.in

# 3️⃣  (Optional) Enable debug for one run to confirm fix
spring.mail.properties.mail.debug=true

# 4️⃣  (Optional but recommended) Timeouts
spring.mail.properties.mail.smtp.connectiontimeout=10000
spring.mail.properties.mail.smtp.timeout=10000
spring.mail.properties.mail.smtp.writetimeout=10000

# resumable upload temp prefix
gcs.temp-prefix=temp
# optional: how long sessions last (handled in UploadSession creation)
gcs.resumable.session.expiry-minutes=120